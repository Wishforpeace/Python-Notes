a = [2, 3, 7, 5, 1]
n = len(a) #求列表a的长度，也就是元素数量

#n个数的冒泡排序的思路是依次进行以下几趟冒泡操作：
#第1趟冒泡操作对元素a[0]至a[n-1]实施，将a[0]至a[n-1]中最大的元素移到a[n-1]保存；
#第2趟冒泡操作对元素a[0]至a[n-2]实施，将a[0]至a[n-2]中最大的元素移到a[n-2]保存；
#......
#最后一趟冒泡操作对元素a[0]至a[1]实施，将a[0]至a[1]中最大的元素移到a[1]保存；
#至此，一共经历n-1趟冒泡操作后，整个列表元素都是有序的，排序过程结束。

#上面的每一趟冒泡操作，可以抽象成“对元素a[0]至a[i]实施，将a[0]至a[i]中最大的元素移到a[i]保存”
#本例中循环的设计思路是：循环控制变量i等于x，就对索引号为“0到x”的元素进行一趟冒泡操作。
#将上面这个抽象的一趟冒泡操作循环n-1次实施，即为整个冒泡排序的过程。

for i in range(n-1,0,-1): #每循环一次，对a[0]至a[i]进行一趟冒泡操作，将a[0]-a[i]中找到的最大元素移到a[i]中保存
                          #第1趟冒泡操作是对元素a[0]至a[n-1]进行，所以循环控制变量i的初值为n-1
                          #最后1趟冒泡操作是对元素a[0]至a[1]进行，所以循环控制变量i的末值为1
                          #所以循环时range()函数的调用形式为range(n-1,0,-1)

    #当前对a[0]至a[i]进行的一趟冒泡操作的具体实施过程是:
    #依次比较a[0]与a[1],a[1]与a[2],...,a[i-1]与a[i]这几对元素的值，若前一个大于后一个就交换（假定按照递增序排序） 
    #上述比较过程进行i-1次，每一次比较可以抽象成“比较a[j]与a[j+1]，若前一个大于后一个就交换”
    #将上面这个抽象的一次比较循环i-1次实施，即为当前对a[0]至a[i]进行的一趟冒泡操作的全过程。
    
    for j in range(0, i): #每循环一次，比较a[j]与a[j+1]，若前一个大于后一个就交换
                          #第1次比较是对元素a[0]与a[1]进行，所以循环控制变量j的初值为0
                          #最后1次比较是对元素a[i-1]与a[i]进行，所以循环控制变量j的末值为i-1
                          #所以循环时range()函数的调用形式为range(0,i)
        if a[j] > a[j+1]:
            t=a[j]
            a[j]=a[j+1]
            a[j+1]=t
print(a)

